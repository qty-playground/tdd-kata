# 綠燈階段指導

你正在進行 TDD 的**綠燈階段**。

## 目標
寫最少的程式碼讓測試通過

## 當前任務

### 步驟 1：建立實作檔案
使用編輯器建立 `fizzbuzz.py` 檔案：
```bash
# 使用你喜歡的編輯器
code fizzbuzz.py
# 或 nano fizzbuzz.py
# 或 vim fizzbuzz.py
```

### 步驟 2：寫入最小實作
在 `fizzbuzz.py` 中實作 fizzbuzz 函數，讓這個測試通過：
```python
def test_fizzbuzz_returns_1_for_1():
    assert fizzbuzz(1) == "1"
```

### 步驟 3：測試你的實作
儲存檔案後執行測試：
```bash
uv run pytest
```

### 步驟 4：確認綠燈
測試應該要通過並顯示類似訊息：
```
1 passed
```

## 最小實作原則
- 只寫讓**這個測試**通過的程式碼
- 不考慮其他情況
- 不提前實作未來的需求

## 執行測試
```bash
uv run pytest
```

## 成功標準
- 所有測試都通過（綠燈）
- 程式碼簡單直接

## 完成後

### 步驟 5：提交你的綠燈階段
1. 將檔案加入 git：
   ```bash
   git add fizzbuzz.py
   ```

2. 提交變更：
   ```bash
   git commit -m "done-green: implement fizzbuzz(1) returns '1'"
   ```

3. 告訴教練你完成了：
   ```
   done-green
   ```

### 下一步
教練會：
1. 檢查你的 git commit 和程式碼
2. 確認你使用了最小實作原則
3. 確認所有測試都通過
4. 如果通過檢查，引導你進入重構階段
5. 如果不符標準，要求你重做

## 提示
想想：讓 fizzbuzz(1) 回傳 "1" 的最簡單方法是什麼？